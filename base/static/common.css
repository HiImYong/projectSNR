.t-block {
  display: block;
}

.t-grid {
  display: grid;
}

.t-cursor-pointer {
  cursor: pointer;
}

.t-content-center {
  align-content: center;
}

.t-gap-5 {
  gap: 1.25rem;
}

.t-whitespace-nowrap {
  white-space: nowrap;
}

.t-border-solid {
  border-style: solid;
}

.t-border-blue-300 {
  --tw-border-opacity: 1;
  border-color: rgb(147 197 253 / var(--tw-border-opacity));
}

.t-bg-gray-500 {
  --tw-bg-opacity: 1;
  background-color: rgb(107 114 128 / var(--tw-bg-opacity));
}

.t-bg-gray-100 {
  --tw-bg-opacity: 1;
  background-color: rgb(243 244 246 / var(--tw-bg-opacity));
}

.t-bg-gray-200 {
  --tw-bg-opacity: 1;
  background-color: rgb(229 231 235 / var(--tw-bg-opacity));
}

.t-bg-red-600 {
  --tw-bg-opacity: 1;
  background-color: rgb(220 38 38 / var(--tw-bg-opacity));
}

.t-bg-white {
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity));
}

.t-text-\[50px\] {
  font-size: 50px;
}

.t-text-\[20px\] {
  font-size: 20px;
}

.t-text-black {
  --tw-text-opacity: 1;
  color: rgb(0 0 0 / var(--tw-text-opacity));
}

@font-face {
  font-family: 'KOTRALEAP';

  src: url('https://cdn.jsdelivr.net/gh/projectnoonnu/noonfonts_2110@1.0/KOTRALEAP.woff2') format('woff2');

  font-weight: normal;

  font-style: normal;
}

html > body ul,
html > body li {
  margin:0;
  padding:0;
  list-style:none;
}

html > body {
  font-family: "KOTRALEAP";
  text-underline-position: under;
}

html > body :is(h1, h2, h3, h4, h5, h6) {
  font-weight:normal;
  margin:0;
  font-size:1rem;
}

.after\:t-absolute::after {
  content: var(--tw-content);
  position: absolute;
}

.after\:t-top-\[50\%\]::after {
  content: var(--tw-content);
  top: 50%;
}

.after\:t-left-\[50\%\]::after {
  content: var(--tw-content);
  left: 50%;
}

.after\:t-hidden::after {
  content: var(--tw-content);
  display: none;
}

.after\:t-translate-y-\[-50\%\]::after {
  content: var(--tw-content);
  --tw-translate-y: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.after\:t-translate-x-\[-50\%\]::after {
  content: var(--tw-content);
  --tw-translate-x: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.after\:t-whitespace-nowrap::after {
  content: var(--tw-content);
  white-space: nowrap;
}

.after\:t-rounded::after {
  content: var(--tw-content);
  border-radius: 0.25rem;
}

.after\:t-border-2::after {
  content: var(--tw-content);
  border-width: 2px;
}

.after\:t-border-solid::after {
  content: var(--tw-content);
  border-style: solid;
}

.after\:t-border-white::after {
  content: var(--tw-content);
  --tw-border-opacity: 1;
  border-color: rgb(255 255 255 / var(--tw-border-opacity));
}

.after\:t-p-2::after {
  content: var(--tw-content);
  padding: 0.5rem;
}

.after\:t-text-white::after {
  content: var(--tw-content);
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity));
}

.after\:t-no-underline::after {
  content: var(--tw-content);
  -webkit-text-decoration-line: none;
          text-decoration-line: none;
}

.after\:t-transition-all::after {
  content: var(--tw-content);
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.after\:t-content-\[attr\(data-before\)\]::after {
  --tw-content: attr(data-before);
  content: var(--tw-content);
}

.hover\:after\:t-block:hover::after {
  content: var(--tw-content);
  display: block;
}

@media (min-width: 640px) {
  .sm\:t-grid-cols-2 {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }
}

@media (min-width: 768px) {
  .md\:t-grid-cols-3 {
    grid-template-columns: repeat(3, minmax(0, 1fr));
  }
}

@media (min-width: 1024px) {
  .lg\:t-grid-cols-4 {
    grid-template-columns: repeat(4, minmax(0, 1fr));
  }
}

@media (min-width: 1280px) {
  .xl\:t-grid-cols-5 {
    grid-template-columns: repeat(5, minmax(0, 1fr));
  }
}

